<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Pitt Mak]]></title>
  <link href="http://MAK-Jr.github.com/atom.xml" rel="self"/>
  <link href="http://MAK-Jr.github.com/"/>
  <updated>2013-05-05T10:17:23+08:00</updated>
  <id>http://MAK-Jr.github.com/</id>
  <author>
    <name><![CDATA[Pitt Mak]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Deploy Nginx and Passenger on Ubuntu]]></title>
    <link href="http://MAK-Jr.github.com/blog/2013/05/05/deploy-nginx-and-passenger-on-ubuntu/"/>
    <updated>2013-05-05T09:34:00+08:00</updated>
    <id>http://MAK-Jr.github.com/blog/2013/05/05/deploy-nginx-and-passenger-on-ubuntu</id>
    <content type="html"><![CDATA[<ol>
<li><p>安装编译器和一些依赖模块(如果更新包比较慢,请更换为中国的源,具体看这里http://yubosun.akcms.com/tech/ubuntu-apt-get-sources-lst.htm)</p>

<p> <code>sudo apt-get update</code></p>

<p> <code>sudo apt-get install -y build-essential openssl curl libcurl3-dev libreadline6 libreadline6-dev git zlib1g zlib1g-dev libssl-dev libyaml-dev libxml2-dev libxslt-dev autoconf automake libtool imagemagick libmagickwand-dev libpcre3-dev libsqlite3-dev libmysql-ruby libmysqlclient-dev</code></p></li>
<li><p>安装 RVM</p>

<p> <code>curl -L https://get.rvm.io | bash -s stable</code></p>

<p> <code>source ~/.rvm/scripts/rvm</code></p>

<p> 修改到淘宝的服务器</p>

<p> <code>cp $rvm_path/config/db $rvm_path/config/db.bak</code></p>

<p> <code>sed 's!ftp.ruby-lang.org/pub/ruby!ruby.taobao.org/mirrors/ruby!' $rvm_path/config/db</code></p>

<p> 安装缺失模块</p>

<p> <code>sudo apt-get install git-core</code></p>

<p> <code>sudo apt-get install sqlite3 libgdbm-dev libncurses5-dev bison libffi-dev</code></p>

<p> 安装 ruby 1.9.3</p>

<p> <code>rvm install 1.9.3</code></p></li>
<li><p>设置 ruby 版本和 gemset</p>

<p> <code>rvm use 1.9.3</code></p>

<p> <code>rvm gemset create rails3213</code></p>

<p> <code>rvm use 1.9.3@rails3213 --default</code></p></li>
<li><p>安装 passneger 和 nginx</p>

<p> <code>gem install passenger</code></p>

<p> <code>rvmsudo passenger-install-nginx-module</code></p>

<p> <code>在接下来的选项依次选按 enter/1/enter</code></p></li>
<li><p>安装  rails</p>

<p> 替换淘宝的源</p>

<p> <code>gem source -r http://rubygems.org/</code></p>

<p> <code>gem source -a http://ruby.taobao.org</code></p>

<p> <code>gem install rails</code></p></li>
<li><p>创建一个测试 nginx 的 rails 项目</p>

<p> <code>mkdir ~/projects &amp;&amp; cd ~/projects</code></p>

<p> <code>rails new demo</code></p>

<p> 把 demo 目录下面的 Gemfile 第一行改为 source &#8216;http://ruby.taobao.org&#8217;</p>

<p> <code>cd demo</code></p>

<p> <code>bundle install</code></p>

<p> 安装 node.js 作为 Rails 的 Javascript engine</p>

<p> <code>sudo apt-get install nodejs</code></p>

<p> 测试 rails 项目</p>

<p> <code>rails s</code></p></li>
<li><p>配置 nginx 指向测试的 rails 项目</p>

<p>编辑 /opt/nginx/conf/nginx.conf</p>

<p><code>sudo vi /opt/nginx/conf/nginx.conf</code></p>

<p>注释掉 server 里面的东西,写成这样:</p></li>
</ol>


<figure class='code'><figcaption><span>lang: ruby </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>server{
</span><span class='line'>        listen       80;
</span><span class='line'>        server_name  localhost;
</span><span class='line'>
</span><span class='line'>        root /home/ubuntu/projects/demo/public;
</span><span class='line'>        passenger_enabled on;
</span><span class='line'>        rails_env production;
</span><span class='line'>    }</span></code></pre></td></tr></table></div></figure>


<p>上面的 root 后面指向的是测试的 rails 项目里面的 public 目录,在这个配置文件的最上面加入:</p>

<pre><code>`user root;`
</code></pre>

<ol>
<li><p>配置测试的 rails 项目</p>

<p> <code>cd ~/project/demo</code></p>

<p> <code>echo “rvm use 1.9.3@rails3213”  &gt; .rvmrc (这个可选)</code></p>

<p> <code>rvm rvmrc trust</code></p>

<p> 增加 config/setup_load_path.rb, 贴上以下代码并且保存:</p></li>
</ol>


<figure class='code'><figcaption><span>lang: ruby </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>if ENV['MY_RUBY_HOME'] && ENV['MY_RUBY_HOME'].include?('rvm')
</span><span class='line'>  begin
</span><span class='line'>    gems_path = ENV['MY_RUBY_HOME'].split(/@/)[0].sub(/rubies/,'gems')
</span><span class='line'>    ENV['GEM_PATH'] = "#{gems_path}:#{gems_path}@global"
</span><span class='line'>    require 'rvm'
</span><span class='line'>    RVM.use_from_path! File.dirname(File.dirname(__FILE__))
</span><span class='line'>  rescue LoadError
</span><span class='line'>    raise "RVM gem is currently unavailable."
</span><span class='line'>  end
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'># If you're not using Bundler at all, remove lines bellow
</span><span class='line'>ENV['BUNDLE_GEMFILE'] = File.expand_path('../Gemfile', File.dirname(__FILE__))
</span><span class='line'>require 'bundler/setup'</span></code></pre></td></tr></table></div></figure>


<p>然后启动nginx:</p>

<pre><code>`sudo /opt/nginx/sbin/nginx`
</code></pre>

<p>停止 nginx 可以用:</p>

<pre><code>`sudo /opt/nginx/sbin/nginx  -s stop`
</code></pre>

<ul>
<li>全文完</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use Engine Yard service as a socket5 proxy]]></title>
    <link href="http://MAK-Jr.github.com/blog/2013/02/08/use-engine-yard-service-as-a-socket5-proxy/"/>
    <updated>2013-02-08T10:22:00+08:00</updated>
    <id>http://MAK-Jr.github.com/blog/2013/02/08/use-engine-yard-service-as-a-socket5-proxy</id>
    <content type="html"><![CDATA[<p>Engine Yard 使用 Amazon Web Services(AWS) 作為服務器, 同時也提供了 SSH acess. 在大陸, 為了 bypass 國家的 firewall 去訪問一下被牆的網站, 通常都需要翻牆, 有了 AWS, 最最簡單的 bypass 方法, 就是用 ssh 通道作為 socket5 代理, 就行了.</p>

<p>所以, 建立好 instance 後, 直接用 <code>ssh -C2qTnN -D 8080 yourserver</code> 就可以在本地開一個 socket5 代理了. 配合 chrome 的代理外掛, 就可以順利翻牆了, 非常簡單.</p>

<p><code>PS. Engine Yard 提供了500個小時的免費運行時間</code></p>

<p><a href="http://www.engineyard.com">Engine Yard</a></p>

<p>使用過程中碰到一個問題, SSH 通道變成 socket5 代理, 使用一小段時間後, 會出現變慢的現象, 結果我亂來了一通, 結果給治好了, 記錄一下亂來的 steps</p>

<ul>
<li>編輯 ~/.ssh/config, 加入這行 <code>ServerAliveInterval 8</code></li>
<li>想辦法節省服務器上面的資源, 其實就是讓 instance 在部署環境的時候失敗, 這樣可以節省不少 memory 哦. 讓他失敗的方法就是在 boot 的時候, 刷新一下頁面, 這個方法我一直在用, 如果還是不行, 就加入一個 unix pakage, 也是在 apply 的過程中刷新一下頁面.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails 3.2.11 assets pipeline error solution]]></title>
    <link href="http://MAK-Jr.github.com/blog/2013/02/03/rails-3-dot-2-11-assets-pipeline-error-solution/"/>
    <updated>2013-02-03T21:24:00+08:00</updated>
    <id>http://MAK-Jr.github.com/blog/2013/02/03/rails-3-dot-2-11-assets-pipeline-error-solution</id>
    <content type="html"><![CDATA[<p>默認情況下,運行<code>rake assets:precompile</code>, 打開頁面後, rails會提示找不到application.js等等一些assets, 出現這種情況的原因是在production模式下運行的public目錄是沒有expose給用戶的,這樣設計是由ngix和apache這些web server來接管public目錄, 所以,如果只是用rails默認的server來跑的話,需要到<code>config/environments/production.rb</code>修改一行, 讓public目錄expose出來.</p>

<p><code>config.serve_static_assets = true</code></p>

<p>-=[完]=-</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[成功部署octopress]]></title>
    <link href="http://MAK-Jr.github.com/blog/2013/01/23/cheng-gong-bu-shu-octopress/"/>
    <updated>2013-01-23T16:31:00+08:00</updated>
    <id>http://MAK-Jr.github.com/blog/2013/01/23/cheng-gong-bu-shu-octopress</id>
    <content type="html"><![CDATA[<p>這次是部署沒有用<code>rake　deploy</code>,而是進入_deploy後,<code>git　push　origin</code>,使用的是https的repo</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[git代理设置和https通道]]></title>
    <link href="http://MAK-Jr.github.com/blog/2013/01/23/gitdai-li-she-zhi-he-httpstong-dao/"/>
    <updated>2013-01-23T15:34:00+08:00</updated>
    <id>http://MAK-Jr.github.com/blog/2013/01/23/gitdai-li-she-zhi-he-httpstong-dao</id>
    <content type="html"><![CDATA[<p>這幾天GFW的魔爪已經伸向github了,導致現在git已經無法使用,但是,如果你是使用goagent來翻牆的話,還是能解決這個問題的.</p>

<ul>
<li><p>升級git(起碼要git version 1.7.10.4以上)</p></li>
<li><p>其次修改你本地git的remote</p></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git remote add origin https://github.com/user/repo.git</span></code></pre></td></tr></table></div></figure>


<p>   這個根據你的repo而定,注意一定要用https,而不是ssh</p>

<ul>
<li>修改git的http代理.</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git config --global http.proxy "127.0.0.1:8087"</span></code></pre></td></tr></table></div></figure>


<p>  <code>127.0.0.1:8087</code>這個是goagent默認的代理服務器</p>

<ul>
<li><p>最後,如果你<code>git push origin master</code>的話,會提示github的用戶名和密碼.</p></li>
<li><p>如果不打算用代理了,可以直接
　</p></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>　 git config --global http.proxy ""
</span><span class='line'>　</span></code></pre></td></tr></table></div></figure>


<p>　</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>　一下是針對部署在github上面的octopress
</span><span class='line'>　cd octopress
</span><span class='line'>　git remote rm origin
</span><span class='line'>　git remote add orgin https://github.com/MAK-Jr/mak-jr.github.com.git 
</span><span class='line'>　cd _deploy
</span><span class='line'>　　git remote add orgin https://github.com/MAK-Jr/mak-jr.github.com.git 
</span><span class='line'>
</span><span class='line'>  然後就可以
</span><span class='line'>  rake deploy
</span><span class='line'>  git add .
</span><span class='line'>  git commit -m "new post"
</span><span class='line'>  git push origin source
</span><span class='line'>　</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CF上面自造一个CronJob]]></title>
    <link href="http://MAK-Jr.github.com/blog/2013/01/15/cfshang-mian-zi-zao-yi-ge-cronjob/"/>
    <updated>2013-01-15T15:29:00+08:00</updated>
    <id>http://MAK-Jr.github.com/blog/2013/01/15/cfshang-mian-zi-zao-yi-ge-cronjob</id>
    <content type="html"><![CDATA[<p>問題:</p>

<p>CloundFoundry(以下簡稱CF)上面沒有提供CronJob(定時背景任務)的功能,所以,自己想打造一個守護程式來做網頁抓取.</p>

<p>方法:</p>

<p>首先,往CF部署一個默認的Rails程式.這方面的教程可以參考CF的<a href="http://docs.cloudfoundry.com/frameworks/ruby/rails-3-1.html">Documents</a></p>

<p>然後,可以在CF上面的rails裡面新建一個Process,用來跑deamon.rb(我們的守護程式,放到Rails的根目錄下面,因為CF上面用戶的當前目錄便是此目錄,方便敲打命令)</p>

<p>最後,我把需要用到的關鍵代碼貼一下,主要是Controller的代碼:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">ShellController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>    <span class="c1">#binding.pry</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">request</span><span class="o">.</span><span class="n">method</span> <span class="o">==</span> <span class="s1">&#39;POST&#39;</span>
</span><span class='line'>      <span class="n">cmd</span> <span class="o">=</span> <span class="n">params</span><span class="o">[</span><span class="s1">&#39;cmd&#39;</span><span class="o">]</span>
</span><span class='line'>      <span class="n">t</span> <span class="o">=</span> <span class="n">params</span><span class="o">[</span><span class="s1">&#39;type&#39;</span><span class="o">]</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">t</span> <span class="o">==</span> <span class="s1">&#39;fork&#39;</span>
</span><span class='line'>        <span class="vi">@output</span> <span class="o">=</span> <span class="n">fork_command</span><span class="p">(</span><span class="n">cmd</span><span class="p">)</span>
</span><span class='line'>      <span class="k">elsif</span> <span class="n">t</span> <span class="o">==</span> <span class="s1">&#39;nofork&#39;</span>
</span><span class='line'>        <span class="vi">@output</span> <span class="o">=</span> <span class="n">execute_command</span><span class="p">(</span><span class="n">cmd</span><span class="p">)</span>
</span><span class='line'>        <span class="vi">@output</span> <span class="o">=</span> <span class="vi">@output</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;&lt;br \&gt;&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="n">request</span><span class="o">.</span><span class="n">method</span> <span class="o">==</span> <span class="s1">&#39;GET&#39;</span>
</span><span class='line'>      <span class="vi">@output</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">fork_command</span><span class="p">(</span><span class="n">cmd</span><span class="p">)</span>
</span><span class='line'>    <span class="no">Thread</span><span class="o">.</span><span class="n">new</span> <span class="k">do</span>
</span><span class='line'>      <span class="nb">system</span><span class="p">(</span><span class="n">cmd</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="c1">#fork { cmd }</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">execute_command</span><span class="p">(</span><span class="n">cmd</span><span class="p">)</span>
</span><span class='line'>    <span class="sx">%x[</span><span class="si">#{</span><span class="n">cmd</span><span class="si">}</span><span class="sx">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>最最關鍵的地方是這裡:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">fork_command</span><span class="p">(</span><span class="n">cmd</span><span class="p">)</span>
</span><span class='line'>    <span class="no">Thread</span><span class="o">.</span><span class="n">new</span> <span class="k">do</span>
</span><span class='line'>      <span class="nb">system</span><span class="p">(</span><span class="n">cmd</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="c1">#fork { cmd }</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>原先我用了<code>fork {cmd}</code>,但是這樣的話,無法用kill這個命令來關掉fork出來的Process,所以改用Thread.new.</p>

<p>整個demo可以在下面的地址看到<a href="http://ruby-web-shell.cloudfoundry.com/shell">Demo</a></p>

<p>先輸入<code>ruby　deamon.rb</code>,再修改type為fork.提交.</p>

<p>然後輸入ps,提交.應該就可以看到已經有兩個ruby進程在跑了.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在Mac OS X安裝Mysql]]></title>
    <link href="http://MAK-Jr.github.com/blog/2013/01/13/zai-mac-os-xan-zhuang-mysql/"/>
    <updated>2013-01-13T18:26:00+08:00</updated>
    <id>http://MAK-Jr.github.com/blog/2013/01/13/zai-mac-os-xan-zhuang-mysql</id>
    <content type="html"><![CDATA[<p>簡單安裝</p>

<ol>
<li><p>使用HomeBrew安裝mysql</p>

<p> <code>brew install mysql</code></p></li>
<li><p>配置數據庫</p></li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ mysql_install_db --verbose --user=`whoami` --basedir="$(brew --prefix mysql)" --datadir=/usr/local/var/mysql --tmpdir=/tmp</span></code></pre></td></tr></table></div></figure>


<ol>
<li><p>運行mysql和進入管理界面</p>

<p> <code>/usr/local/opt/mysql/bin/mysqld_safe &amp;</code></p>

<p> <code>mysql -uroot</code></p></li>
</ol>


<p>-=Done=-</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby gems歷險記]]></title>
    <link href="http://MAK-Jr.github.com/blog/2013/01/13/ruby-gemsli-xian-ji/"/>
    <updated>2013-01-13T16:10:00+08:00</updated>
    <id>http://MAK-Jr.github.com/blog/2013/01/13/ruby-gemsli-xian-ji</id>
    <content type="html"><![CDATA[<p>想安裝Cloudfoundry的command line tool,所以就這樣來做</p>

<p><code>sudo gem install vmc</code></p>

<p>失敗,提示</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ERROR:  While executing gem ... (Zlib::GzipFile::Error)
</span><span class='line'>    not in gzip format</span></code></pre></td></tr></table></div></figure>


<p>懷疑是網絡問題,所以查看gem的sources,運行</p>

<p><code>gem sources</code></p>

<p>輸出:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>*** CURRENT SOURCES ***
</span><span class='line'>
</span><span class='line'>http://rubygems.org/
</span><span class='line'>http://ruby.taobao.org
</span><span class='line'>http://gems.rubyforge.org/</span></code></pre></td></tr></table></div></figure>


<p>依次把其他sources都刪除,只留 <code>http://rubygems.org/</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem sources -r http://ruby.taobao.org
</span><span class='line'>gem sources -r http://gems.rubyforge.org/</span></code></pre></td></tr></table></div></figure>


<p>再次運行:</p>

<p><code>sudo gem install vmc</code></p>

<p>成功!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在Rails中使用Pry來做調試]]></title>
    <link href="http://MAK-Jr.github.com/blog/2013/01/07/zai-railszhong-shi-yong-prylai-zuo-diao-shi/"/>
    <updated>2013-01-07T15:07:00+08:00</updated>
    <id>http://MAK-Jr.github.com/blog/2013/01/07/zai-railszhong-shi-yong-prylai-zuo-diao-shi</id>
    <content type="html"><![CDATA[<ul>
<li><p>首先安裝Pry這個Gem</p>

<p>  <code>sudo gem install pry</code></p></li>
<li>其他參考這篇文章</li>
</ul>


<p>　<a href="http://filipemoreira.com/blog/2012/03/09/using-pry-with-rails">Using Pry With Rails</a></p>

<ul>
<li>使用方法</li>
</ul>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="nb">binding</span><span class="o">.</span><span class="n">pry</span>
</span></code></pre></td></tr></table></div></figure>


<p>　　可以在Model, Controller, View裡面使用</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[英英字典的一些好處]]></title>
    <link href="http://MAK-Jr.github.com/blog/2013/01/04/ying-ying-zi-dian-de-yi-xie-hao-chu/"/>
    <updated>2013-01-04T21:26:00+08:00</updated>
    <id>http://MAK-Jr.github.com/blog/2013/01/04/ying-ying-zi-dian-de-yi-xie-hao-chu</id>
    <content type="html"><![CDATA[<p>最近一直有在用英英字典來學習英語.不過有時候為了快速知道某個單詞的意思,轉而直接查看英漢詞典,比如google translate.不過我覺得如果可以,一定要培養使用英英詞典的好習慣,因為這樣可以培養自己用英語思維的好處.還有另外一個重要的原因,英漢詞典有時候翻譯過來的意思太過生硬了.舉個例子,我們來對比這個單詞: asset</p>

<p>從 Mac OS X 自帶的英英詞典來看:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">asset</span> <span class="o">|</span><span class="err">ˈ</span><span class="n">aset</span><span class="o">|</span>
</span><span class='line'>
</span><span class='line'><span class="n">noun</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span> <span class="n">useful</span> <span class="ow">or</span> <span class="n">valuable</span> <span class="n">thing</span><span class="p">,</span> <span class="n">person</span><span class="p">,</span> <span class="ow">or</span> <span class="ss">quality</span><span class="p">:</span> <span class="n">quick</span>
</span><span class='line'>
</span><span class='line'><span class="n">reflexes</span> <span class="n">were</span> <span class="n">his</span> <span class="n">chief</span> <span class="n">asset</span> <span class="o">|</span> <span class="n">the</span> <span class="n">school</span> <span class="n">is</span> <span class="n">an</span> <span class="n">asset</span> <span class="n">to</span>
</span><span class='line'>
</span><span class='line'><span class="n">the</span> <span class="n">community</span><span class="o">.</span>
</span><span class='line'>
</span><span class='line'><span class="err">•</span> <span class="p">(</span><span class="n">usu</span><span class="o">.</span> <span class="n">assets</span><span class="p">)</span> <span class="n">property</span> <span class="n">owned</span> <span class="n">by</span> <span class="n">a</span> <span class="n">person</span> <span class="ow">or</span> <span class="n">company</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'><span class="n">regarded</span> <span class="n">as</span> <span class="n">having</span> <span class="n">value</span> <span class="ow">and</span> <span class="n">available</span> <span class="n">to</span> <span class="n">meet</span> <span class="n">debts</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'><span class="n">commitments</span><span class="p">,</span> <span class="ow">or</span> <span class="ss">legacies</span><span class="p">:</span> <span class="n">growth</span> <span class="k">in</span> <span class="n">net</span> <span class="n">assets</span> <span class="o">|</span> <span class="o">[</span> <span class="n">as</span>
</span><span class='line'>
</span><span class='line'><span class="n">modifier</span> <span class="o">]</span> <span class="p">:</span> <span class="n">debiting</span> <span class="n">the</span> <span class="n">asset</span> <span class="n">account</span><span class="o">.</span>
</span><span class='line'>
</span><span class='line'><span class="err">•</span> <span class="p">(</span><span class="n">assets</span><span class="p">)</span> <span class="n">military</span> <span class="n">equipment</span><span class="p">,</span> <span class="n">such</span> <span class="n">as</span> <span class="n">planes</span><span class="p">,</span> <span class="n">ships</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'><span class="n">communications</span> <span class="ow">and</span> <span class="n">radar</span> <span class="n">installations</span><span class="p">,</span> <span class="n">employed</span> <span class="ow">or</span>
</span><span class='line'>
</span><span class='line'><span class="n">targeted</span> <span class="k">in</span> <span class="n">military</span> <span class="n">operations</span><span class="o">.</span>
</span><span class='line'>
</span><span class='line'><span class="no">ORIGIN</span> <span class="n">mid</span> <span class="mi">16</span><span class="n">th</span> <span class="n">cent</span><span class="o">.</span> <span class="p">(</span><span class="k">in</span> <span class="n">the</span> <span class="n">plural</span> <span class="k">in</span> <span class="n">the</span> <span class="n">sense</span>
</span><span class='line'>
</span><span class='line'><span class="err">‘</span><span class="n">sufficient</span> <span class="n">estate</span> <span class="n">to</span> <span class="n">allow</span> <span class="n">discharge</span> <span class="n">of</span> <span class="n">a</span> <span class="n">will</span><span class="err">’</span><span class="p">):</span> <span class="n">from</span>
</span><span class='line'>
</span><span class='line'><span class="n">an</span> <span class="no">Anglo</span><span class="o">-</span><span class="no">Norman</span> <span class="no">French</span> <span class="n">legal</span> <span class="n">term</span><span class="p">,</span> <span class="n">from</span> <span class="no">Old</span> <span class="no">French</span> <span class="n">asez</span>
</span><span class='line'>
</span><span class='line'><span class="err">‘</span><span class="n">enough</span><span class="p">,</span><span class="err">’</span> <span class="n">based</span> <span class="n">on</span> <span class="no">Latin</span> <span class="n">ad</span> <span class="err">‘</span><span class="n">to</span><span class="err">’</span> <span class="o">+</span> <span class="n">satis</span> <span class="err">‘</span><span class="n">enough</span><span class="o">.</span><span class="err">’</span>
</span></code></pre></td></tr></table></div></figure>


<p>而google　translate的翻譯呢?請看:</p>

<p><code>名詞　财富　wealth, asset, richness</code></p>

<p>從英英詞典的意思來看,asset還有<code>好處</code>,<code>優點</code>之類的意思.</p>

<p>PS. Rails的asset pipeline應該怎麼解釋呢?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Very Beginning]]></title>
    <link href="http://MAK-Jr.github.com/blog/2013/01/04/the-very-beginning/"/>
    <updated>2013-01-04T10:22:00+08:00</updated>
    <id>http://MAK-Jr.github.com/blog/2013/01/04/the-very-beginning</id>
    <content type="html"><![CDATA[<p>Welcome!</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">[</span><span class="n">rectangle</span> <span class="nl">setX:</span> <span class="mi">10</span> <span class="nl">y:</span> <span class="mi">10</span> <span class="nl">width:</span> <span class="mi">20</span> <span class="nl">height:</span> <span class="mi">20</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
</feed>
